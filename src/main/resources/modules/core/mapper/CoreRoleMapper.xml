<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mintleaf.modules.core.mapper.CoreRoleMapper">
  <resultMap id="BaseResultMap" type="org.mintleaf.modules.core.domain.CoreRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, createtime, creator, description, updateuser, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from core_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from core_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.mintleaf.modules.core.domain.CoreRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into core_role (name, createtime, creator, 
      description, updateuser, updatetime
      )
    values (#{name,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.mintleaf.modules.core.domain.CoreRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into core_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.mintleaf.modules.core.domain.CoreRole">
    update core_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mintleaf.modules.core.domain.CoreRole">
    update core_role
    set name = #{name,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteBatch">
    delete from core_role
    where 1=1
    <if test="ids!=null and ids.size()>0">
      <foreach collection="ids" item="ids" open="AND ("
               separator="OR" close=")">
        id = #{ids,jdbcType = INTEGER}
      </foreach>
    </if>
  </delete>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from core_role
    where 1=1
    <if test="name != null and name !='' ">
      and name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    order by createtime,updatetime  desc
  </select>
  <select id="findRoleByIdSample" resultMap="BaseResultMap">
    select r.*
    FROM core_user u,core_role r,core_user_role ur
    WHERE u.id=ur.userid
    AND r.id=ur.roleid
    AND u.id=#{userId,jdbcType=INTEGER}
  </select>
</mapper>